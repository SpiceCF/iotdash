/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntityThermometerHistory
 */
export interface EntityThermometerHistory {
    /**
     * 
     * @type {object}
     * @memberof EntityThermometerHistory
     */
    id?: object;
    /**
     * 
     * @type {number}
     * @memberof EntityThermometerHistory
     */
    temperature?: number;
    /**
     * 
     * @type {object}
     * @memberof EntityThermometerHistory
     */
    thermometerId?: object;
    /**
     * 
     * @type {object}
     * @memberof EntityThermometerHistory
     */
    timestamp?: object;
}

/**
 * Check if a given object implements the EntityThermometerHistory interface.
 */
export function instanceOfEntityThermometerHistory(value: object): value is EntityThermometerHistory {
    return true;
}

export function EntityThermometerHistoryFromJSON(json: any): EntityThermometerHistory {
    return EntityThermometerHistoryFromJSONTyped(json, false);
}

export function EntityThermometerHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityThermometerHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
        'thermometerId': json['thermometer_id'] == null ? undefined : json['thermometer_id'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
    };
}

  export function EntityThermometerHistoryToJSON(json: any): EntityThermometerHistory {
      return EntityThermometerHistoryToJSONTyped(json, false);
  }

  export function EntityThermometerHistoryToJSONTyped(value?: EntityThermometerHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'temperature': value['temperature'],
        'thermometer_id': value['thermometerId'],
        'timestamp': value['timestamp'],
    };
}

