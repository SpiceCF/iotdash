/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityThermometerConfig } from './EntityThermometerConfig';
import {
    EntityThermometerConfigFromJSON,
    EntityThermometerConfigFromJSONTyped,
    EntityThermometerConfigToJSON,
    EntityThermometerConfigToJSONTyped,
} from './EntityThermometerConfig';

/**
 * 
 * @export
 * @interface SimulatorCreateThermometerRequest
 */
export interface SimulatorCreateThermometerRequest {
    /**
     * 
     * @type {EntityThermometerConfig}
     * @memberof SimulatorCreateThermometerRequest
     */
    config?: EntityThermometerConfig;
}

/**
 * Check if a given object implements the SimulatorCreateThermometerRequest interface.
 */
export function instanceOfSimulatorCreateThermometerRequest(value: object): value is SimulatorCreateThermometerRequest {
    return true;
}

export function SimulatorCreateThermometerRequestFromJSON(json: any): SimulatorCreateThermometerRequest {
    return SimulatorCreateThermometerRequestFromJSONTyped(json, false);
}

export function SimulatorCreateThermometerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorCreateThermometerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : EntityThermometerConfigFromJSON(json['config']),
    };
}

  export function SimulatorCreateThermometerRequestToJSON(json: any): SimulatorCreateThermometerRequest {
      return SimulatorCreateThermometerRequestToJSONTyped(json, false);
  }

  export function SimulatorCreateThermometerRequestToJSONTyped(value?: SimulatorCreateThermometerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': EntityThermometerConfigToJSON(value['config']),
    };
}

