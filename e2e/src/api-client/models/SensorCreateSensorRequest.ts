/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SensorCreateSensorRequest
 */
export interface SensorCreateSensorRequest {
    /**
     * 
     * @type {object}
     * @memberof SensorCreateSensorRequest
     */
    deviceId?: object;
    /**
     * 
     * @type {string}
     * @memberof SensorCreateSensorRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SensorCreateSensorRequest
     */
    type?: string;
}

/**
 * Check if a given object implements the SensorCreateSensorRequest interface.
 */
export function instanceOfSensorCreateSensorRequest(value: object): value is SensorCreateSensorRequest {
    return true;
}

export function SensorCreateSensorRequestFromJSON(json: any): SensorCreateSensorRequest {
    return SensorCreateSensorRequestFromJSONTyped(json, false);
}

export function SensorCreateSensorRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorCreateSensorRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

  export function SensorCreateSensorRequestToJSON(json: any): SensorCreateSensorRequest {
      return SensorCreateSensorRequestToJSONTyped(json, false);
  }

  export function SensorCreateSensorRequestToJSONTyped(value?: SensorCreateSensorRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_id': value['deviceId'],
        'name': value['name'],
        'type': value['type'],
    };
}

