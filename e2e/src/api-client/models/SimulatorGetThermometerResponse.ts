/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityThermometer } from './EntityThermometer';
import {
    EntityThermometerFromJSON,
    EntityThermometerFromJSONTyped,
    EntityThermometerToJSON,
    EntityThermometerToJSONTyped,
} from './EntityThermometer';

/**
 * 
 * @export
 * @interface SimulatorGetThermometerResponse
 */
export interface SimulatorGetThermometerResponse {
    /**
     * 
     * @type {EntityThermometer}
     * @memberof SimulatorGetThermometerResponse
     */
    data?: EntityThermometer;
    /**
     * 
     * @type {number}
     * @memberof SimulatorGetThermometerResponse
     */
    status?: number;
}

/**
 * Check if a given object implements the SimulatorGetThermometerResponse interface.
 */
export function instanceOfSimulatorGetThermometerResponse(value: object): value is SimulatorGetThermometerResponse {
    return true;
}

export function SimulatorGetThermometerResponseFromJSON(json: any): SimulatorGetThermometerResponse {
    return SimulatorGetThermometerResponseFromJSONTyped(json, false);
}

export function SimulatorGetThermometerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorGetThermometerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : EntityThermometerFromJSON(json['data']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

  export function SimulatorGetThermometerResponseToJSON(json: any): SimulatorGetThermometerResponse {
      return SimulatorGetThermometerResponseToJSONTyped(json, false);
  }

  export function SimulatorGetThermometerResponseToJSONTyped(value?: SimulatorGetThermometerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': EntityThermometerToJSON(value['data']),
        'status': value['status'],
    };
}

