/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntitySensorLog } from './EntitySensorLog';
import {
    EntitySensorLogFromJSON,
    EntitySensorLogFromJSONTyped,
    EntitySensorLogToJSON,
    EntitySensorLogToJSONTyped,
} from './EntitySensorLog';

/**
 * 
 * @export
 * @interface SensorListSensorLogsResponse
 */
export interface SensorListSensorLogsResponse {
    /**
     * 
     * @type {Array<EntitySensorLog>}
     * @memberof SensorListSensorLogsResponse
     */
    data?: Array<EntitySensorLog>;
    /**
     * 
     * @type {number}
     * @memberof SensorListSensorLogsResponse
     */
    status?: number;
}

/**
 * Check if a given object implements the SensorListSensorLogsResponse interface.
 */
export function instanceOfSensorListSensorLogsResponse(value: object): value is SensorListSensorLogsResponse {
    return true;
}

export function SensorListSensorLogsResponseFromJSON(json: any): SensorListSensorLogsResponse {
    return SensorListSensorLogsResponseFromJSONTyped(json, false);
}

export function SensorListSensorLogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorListSensorLogsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(EntitySensorLogFromJSON)),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

  export function SensorListSensorLogsResponseToJSON(json: any): SensorListSensorLogsResponse {
      return SensorListSensorLogsResponseToJSONTyped(json, false);
  }

  export function SensorListSensorLogsResponseToJSONTyped(value?: SensorListSensorLogsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(EntitySensorLogToJSON)),
        'status': value['status'],
    };
}

