/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityThermometer } from './EntityThermometer';
import {
    EntityThermometerFromJSON,
    EntityThermometerFromJSONTyped,
    EntityThermometerToJSON,
    EntityThermometerToJSONTyped,
} from './EntityThermometer';

/**
 * 
 * @export
 * @interface SimulatorCreateThermometerResponse
 */
export interface SimulatorCreateThermometerResponse {
    /**
     * 
     * @type {EntityThermometer}
     * @memberof SimulatorCreateThermometerResponse
     */
    data?: EntityThermometer;
    /**
     * 
     * @type {number}
     * @memberof SimulatorCreateThermometerResponse
     */
    status?: number;
}

/**
 * Check if a given object implements the SimulatorCreateThermometerResponse interface.
 */
export function instanceOfSimulatorCreateThermometerResponse(value: object): value is SimulatorCreateThermometerResponse {
    return true;
}

export function SimulatorCreateThermometerResponseFromJSON(json: any): SimulatorCreateThermometerResponse {
    return SimulatorCreateThermometerResponseFromJSONTyped(json, false);
}

export function SimulatorCreateThermometerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorCreateThermometerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : EntityThermometerFromJSON(json['data']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

  export function SimulatorCreateThermometerResponseToJSON(json: any): SimulatorCreateThermometerResponse {
      return SimulatorCreateThermometerResponseToJSONTyped(json, false);
  }

  export function SimulatorCreateThermometerResponseToJSONTyped(value?: SimulatorCreateThermometerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': EntityThermometerToJSON(value['data']),
        'status': value['status'],
    };
}

