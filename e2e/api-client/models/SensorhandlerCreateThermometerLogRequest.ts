/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SensorhandlerCreateThermometerLogRequest
 */
export interface SensorhandlerCreateThermometerLogRequest {
    /**
     * 
     * @type {object}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    deviceId?: object;
    /**
     * 
     * @type {object}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    id?: object;
    /**
     * 
     * @type {string}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    sensorType?: string;
    /**
     * 
     * @type {string}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    timestamp?: string;
    /**
     * 
     * @type {number}
     * @memberof SensorhandlerCreateThermometerLogRequest
     */
    value?: number;
}

/**
 * Check if a given object implements the SensorhandlerCreateThermometerLogRequest interface.
 */
export function instanceOfSensorhandlerCreateThermometerLogRequest(value: object): value is SensorhandlerCreateThermometerLogRequest {
    return true;
}

export function SensorhandlerCreateThermometerLogRequestFromJSON(json: any): SensorhandlerCreateThermometerLogRequest {
    return SensorhandlerCreateThermometerLogRequestFromJSONTyped(json, false);
}

export function SensorhandlerCreateThermometerLogRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorhandlerCreateThermometerLogRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'sensorType': json['sensor_type'] == null ? undefined : json['sensor_type'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

  export function SensorhandlerCreateThermometerLogRequestToJSON(json: any): SensorhandlerCreateThermometerLogRequest {
      return SensorhandlerCreateThermometerLogRequestToJSONTyped(json, false);
  }

  export function SensorhandlerCreateThermometerLogRequestToJSONTyped(value?: SensorhandlerCreateThermometerLogRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_id': value['deviceId'],
        'id': value['id'],
        'key': value['key'],
        'sensor_type': value['sensorType'],
        'timestamp': value['timestamp'],
        'value': value['value'],
    };
}

