"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSensorhandlerCreateSensorRequest = instanceOfSensorhandlerCreateSensorRequest;
exports.SensorhandlerCreateSensorRequestFromJSON = SensorhandlerCreateSensorRequestFromJSON;
exports.SensorhandlerCreateSensorRequestFromJSONTyped = SensorhandlerCreateSensorRequestFromJSONTyped;
exports.SensorhandlerCreateSensorRequestToJSON = SensorhandlerCreateSensorRequestToJSON;
exports.SensorhandlerCreateSensorRequestToJSONTyped = SensorhandlerCreateSensorRequestToJSONTyped;
/**
 * Check if a given object implements the SensorhandlerCreateSensorRequest interface.
 */
function instanceOfSensorhandlerCreateSensorRequest(value) {
    return true;
}
function SensorhandlerCreateSensorRequestFromJSON(json) {
    return SensorhandlerCreateSensorRequestFromJSONTyped(json, false);
}
function SensorhandlerCreateSensorRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}
function SensorhandlerCreateSensorRequestToJSON(json) {
    return SensorhandlerCreateSensorRequestToJSONTyped(json, false);
}
function SensorhandlerCreateSensorRequestToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'device_id': value['deviceId'],
        'name': value['name'],
        'type': value['type'],
    };
}
