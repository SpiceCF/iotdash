/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainThermometerConfig } from './DomainThermometerConfig';
import {
    DomainThermometerConfigFromJSON,
    DomainThermometerConfigFromJSONTyped,
    DomainThermometerConfigToJSON,
    DomainThermometerConfigToJSONTyped,
} from './DomainThermometerConfig';

/**
 * 
 * @export
 * @interface SimulatorhandlerGetThermometerConfigResponse
 */
export interface SimulatorhandlerGetThermometerConfigResponse {
    /**
     * 
     * @type {DomainThermometerConfig}
     * @memberof SimulatorhandlerGetThermometerConfigResponse
     */
    data?: DomainThermometerConfig;
    /**
     * 
     * @type {string}
     * @memberof SimulatorhandlerGetThermometerConfigResponse
     */
    status?: string;
}

/**
 * Check if a given object implements the SimulatorhandlerGetThermometerConfigResponse interface.
 */
export function instanceOfSimulatorhandlerGetThermometerConfigResponse(value: object): value is SimulatorhandlerGetThermometerConfigResponse {
    return true;
}

export function SimulatorhandlerGetThermometerConfigResponseFromJSON(json: any): SimulatorhandlerGetThermometerConfigResponse {
    return SimulatorhandlerGetThermometerConfigResponseFromJSONTyped(json, false);
}

export function SimulatorhandlerGetThermometerConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorhandlerGetThermometerConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : DomainThermometerConfigFromJSON(json['data']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

  export function SimulatorhandlerGetThermometerConfigResponseToJSON(json: any): SimulatorhandlerGetThermometerConfigResponse {
      return SimulatorhandlerGetThermometerConfigResponseToJSONTyped(json, false);
  }

  export function SimulatorhandlerGetThermometerConfigResponseToJSONTyped(value?: SimulatorhandlerGetThermometerConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': DomainThermometerConfigToJSON(value['data']),
        'status': value['status'],
    };
}

