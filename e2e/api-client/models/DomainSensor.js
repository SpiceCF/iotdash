"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDomainSensor = instanceOfDomainSensor;
exports.DomainSensorFromJSON = DomainSensorFromJSON;
exports.DomainSensorFromJSONTyped = DomainSensorFromJSONTyped;
exports.DomainSensorToJSON = DomainSensorToJSON;
exports.DomainSensorToJSONTyped = DomainSensorToJSONTyped;
var DomainSensorConfig_1 = require("./DomainSensorConfig");
/**
 * Check if a given object implements the DomainSensor interface.
 */
function instanceOfDomainSensor(value) {
    return true;
}
function DomainSensorFromJSON(json) {
    return DomainSensorFromJSONTyped(json, false);
}
function DomainSensorFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'configs': json['configs'] == null ? undefined : (json['configs'].map(DomainSensorConfig_1.DomainSensorConfigFromJSON)),
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'ownerId': json['owner_id'] == null ? undefined : json['owner_id'],
        'type': json['type'] == null ? undefined : json['type'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}
function DomainSensorToJSON(json) {
    return DomainSensorToJSONTyped(json, false);
}
function DomainSensorToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'configs': value['configs'] == null ? undefined : (value['configs'].map(DomainSensorConfig_1.DomainSensorConfigToJSON)),
        'created_at': value['createdAt'],
        'device_id': value['deviceId'],
        'id': value['id'],
        'name': value['name'],
        'owner_id': value['ownerId'],
        'type': value['type'],
        'updated_at': value['updatedAt'],
    };
}
