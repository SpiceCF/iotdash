/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainUser } from './DomainUser';
import {
    DomainUserFromJSON,
    DomainUserFromJSONTyped,
    DomainUserToJSON,
    DomainUserToJSONTyped,
} from './DomainUser';

/**
 * 
 * @export
 * @interface UserhandlerGetMeResponse
 */
export interface UserhandlerGetMeResponse {
    /**
     * 
     * @type {DomainUser}
     * @memberof UserhandlerGetMeResponse
     */
    data?: DomainUser;
    /**
     * 
     * @type {string}
     * @memberof UserhandlerGetMeResponse
     */
    status?: string;
}

/**
 * Check if a given object implements the UserhandlerGetMeResponse interface.
 */
export function instanceOfUserhandlerGetMeResponse(value: object): value is UserhandlerGetMeResponse {
    return true;
}

export function UserhandlerGetMeResponseFromJSON(json: any): UserhandlerGetMeResponse {
    return UserhandlerGetMeResponseFromJSONTyped(json, false);
}

export function UserhandlerGetMeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserhandlerGetMeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : DomainUserFromJSON(json['data']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

  export function UserhandlerGetMeResponseToJSON(json: any): UserhandlerGetMeResponse {
      return UserhandlerGetMeResponseToJSONTyped(json, false);
  }

  export function UserhandlerGetMeResponseToJSONTyped(value?: UserhandlerGetMeResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': DomainUserToJSON(value['data']),
        'status': value['status'],
    };
}

