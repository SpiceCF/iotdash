"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSensorhandlerListSensorsResponse = instanceOfSensorhandlerListSensorsResponse;
exports.SensorhandlerListSensorsResponseFromJSON = SensorhandlerListSensorsResponseFromJSON;
exports.SensorhandlerListSensorsResponseFromJSONTyped = SensorhandlerListSensorsResponseFromJSONTyped;
exports.SensorhandlerListSensorsResponseToJSON = SensorhandlerListSensorsResponseToJSON;
exports.SensorhandlerListSensorsResponseToJSONTyped = SensorhandlerListSensorsResponseToJSONTyped;
var DomainSensor_1 = require("./DomainSensor");
/**
 * Check if a given object implements the SensorhandlerListSensorsResponse interface.
 */
function instanceOfSensorhandlerListSensorsResponse(value) {
    return true;
}
function SensorhandlerListSensorsResponseFromJSON(json) {
    return SensorhandlerListSensorsResponseFromJSONTyped(json, false);
}
function SensorhandlerListSensorsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': json['data'] == null ? undefined : (json['data'].map(DomainSensor_1.DomainSensorFromJSON)),
        'status': json['status'] == null ? undefined : json['status'],
    };
}
function SensorhandlerListSensorsResponseToJSON(json) {
    return SensorhandlerListSensorsResponseToJSONTyped(json, false);
}
function SensorhandlerListSensorsResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'data': value['data'] == null ? undefined : (value['data'].map(DomainSensor_1.DomainSensorToJSON)),
        'status': value['status'],
    };
}
