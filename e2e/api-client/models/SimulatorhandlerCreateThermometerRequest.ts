/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainThermometerConfig } from './DomainThermometerConfig';
import {
    DomainThermometerConfigFromJSON,
    DomainThermometerConfigFromJSONTyped,
    DomainThermometerConfigToJSON,
    DomainThermometerConfigToJSONTyped,
} from './DomainThermometerConfig';

/**
 * 
 * @export
 * @interface SimulatorhandlerCreateThermometerRequest
 */
export interface SimulatorhandlerCreateThermometerRequest {
    /**
     * 
     * @type {DomainThermometerConfig}
     * @memberof SimulatorhandlerCreateThermometerRequest
     */
    config?: DomainThermometerConfig;
}

/**
 * Check if a given object implements the SimulatorhandlerCreateThermometerRequest interface.
 */
export function instanceOfSimulatorhandlerCreateThermometerRequest(value: object): value is SimulatorhandlerCreateThermometerRequest {
    return true;
}

export function SimulatorhandlerCreateThermometerRequestFromJSON(json: any): SimulatorhandlerCreateThermometerRequest {
    return SimulatorhandlerCreateThermometerRequestFromJSONTyped(json, false);
}

export function SimulatorhandlerCreateThermometerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorhandlerCreateThermometerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : DomainThermometerConfigFromJSON(json['config']),
    };
}

  export function SimulatorhandlerCreateThermometerRequestToJSON(json: any): SimulatorhandlerCreateThermometerRequest {
      return SimulatorhandlerCreateThermometerRequestToJSONTyped(json, false);
  }

  export function SimulatorhandlerCreateThermometerRequestToJSONTyped(value?: SimulatorhandlerCreateThermometerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': DomainThermometerConfigToJSON(value['config']),
    };
}

