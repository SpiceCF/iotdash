/* tslint:disable */
/* eslint-disable */
/**
 * IOT DASHBOARD SENSOR MONITORING API
 * API FOR IOT DASHBOARD SENSOR MONITORING
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SensorLog
 */
export interface SensorLog {
    /**
     * The ID of the sensor log
     * @type {string}
     * @memberof SensorLog
     */
    readonly id?: string;
    /**
     * The device ID of the sensor log
     * @type {string}
     * @memberof SensorLog
     */
    readonly deviceId?: string;
    /**
     * The type of the sensor log
     * @type {string}
     * @memberof SensorLog
     */
    readonly sensorType?: SensorLogSensorTypeEnum;
    /**
     * The value of the sensor log
     * @type {object}
     * @memberof SensorLog
     */
    readonly value?: object;
    /**
     * The timestamp of the sensor log
     * @type {Date}
     * @memberof SensorLog
     */
    readonly timestamp?: Date;
}


/**
 * @export
 */
export const SensorLogSensorTypeEnum = {
    Temperature: 'temperature'
} as const;
export type SensorLogSensorTypeEnum = typeof SensorLogSensorTypeEnum[keyof typeof SensorLogSensorTypeEnum];


/**
 * Check if a given object implements the SensorLog interface.
 */
export function instanceOfSensorLog(value: object): value is SensorLog {
    return true;
}

export function SensorLogFromJSON(json: any): SensorLog {
    return SensorLogFromJSONTyped(json, false);
}

export function SensorLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorLog {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'deviceId': json['device_id'] == null ? undefined : json['device_id'],
        'sensorType': json['sensor_type'] == null ? undefined : json['sensor_type'],
        'value': json['value'] == null ? undefined : json['value'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
    };
}

  export function SensorLogToJSON(json: any): SensorLog {
      return SensorLogToJSONTyped(json, false);
  }

  export function SensorLogToJSONTyped(value?: Omit<SensorLog, 'id'|'device_id'|'sensor_type'|'value'|'timestamp'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

