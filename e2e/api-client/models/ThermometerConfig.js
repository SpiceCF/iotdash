"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * IOT DASHBOARD SENSOR MONITORING API
 * API FOR IOT DASHBOARD SENSOR MONITORING
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfThermometerConfig = instanceOfThermometerConfig;
exports.ThermometerConfigFromJSON = ThermometerConfigFromJSON;
exports.ThermometerConfigFromJSONTyped = ThermometerConfigFromJSONTyped;
exports.ThermometerConfigToJSON = ThermometerConfigToJSON;
exports.ThermometerConfigToJSONTyped = ThermometerConfigToJSONTyped;
/**
 * Check if a given object implements the ThermometerConfig interface.
 */
function instanceOfThermometerConfig(value) {
    return true;
}
function ThermometerConfigFromJSON(json) {
    return ThermometerConfigFromJSONTyped(json, false);
}
function ThermometerConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'connection': json['connection'] == null ? undefined : json['connection'],
        'minTemperature': json['min_temperature'] == null ? undefined : json['min_temperature'],
        'maxTemperature': json['max_temperature'] == null ? undefined : json['max_temperature'],
    };
}
function ThermometerConfigToJSON(json) {
    return ThermometerConfigToJSONTyped(json, false);
}
function ThermometerConfigToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'connection': value['connection'],
        'min_temperature': value['minTemperature'],
        'max_temperature': value['maxTemperature'],
    };
}
