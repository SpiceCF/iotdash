"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSimulatorhandlerGetTMHistoryResponse = instanceOfSimulatorhandlerGetTMHistoryResponse;
exports.SimulatorhandlerGetTMHistoryResponseFromJSON = SimulatorhandlerGetTMHistoryResponseFromJSON;
exports.SimulatorhandlerGetTMHistoryResponseFromJSONTyped = SimulatorhandlerGetTMHistoryResponseFromJSONTyped;
exports.SimulatorhandlerGetTMHistoryResponseToJSON = SimulatorhandlerGetTMHistoryResponseToJSON;
exports.SimulatorhandlerGetTMHistoryResponseToJSONTyped = SimulatorhandlerGetTMHistoryResponseToJSONTyped;
var DomainThermometerHistory_1 = require("./DomainThermometerHistory");
/**
 * Check if a given object implements the SimulatorhandlerGetTMHistoryResponse interface.
 */
function instanceOfSimulatorhandlerGetTMHistoryResponse(value) {
    return true;
}
function SimulatorhandlerGetTMHistoryResponseFromJSON(json) {
    return SimulatorhandlerGetTMHistoryResponseFromJSONTyped(json, false);
}
function SimulatorhandlerGetTMHistoryResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'data': json['data'] == null ? undefined : (json['data'].map(DomainThermometerHistory_1.DomainThermometerHistoryFromJSON)),
        'status': json['status'] == null ? undefined : json['status'],
    };
}
function SimulatorhandlerGetTMHistoryResponseToJSON(json) {
    return SimulatorhandlerGetTMHistoryResponseToJSONTyped(json, false);
}
function SimulatorhandlerGetTMHistoryResponseToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'data': value['data'] == null ? undefined : (value['data'].map(DomainThermometerHistory_1.DomainThermometerHistoryToJSON)),
        'status': value['status'],
    };
}
