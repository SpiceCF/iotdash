/* tslint:disable */
/* eslint-disable */
/**
 * Example API Doc
 * Describe your API
 *
 * The version of the OpenAPI document: SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DomainThermometerConfig } from './DomainThermometerConfig';
import {
    DomainThermometerConfigFromJSON,
    DomainThermometerConfigFromJSONTyped,
    DomainThermometerConfigToJSON,
    DomainThermometerConfigToJSONTyped,
} from './DomainThermometerConfig';

/**
 * 
 * @export
 * @interface SimulatorhandlerUpdateThermometerConfigRequest
 */
export interface SimulatorhandlerUpdateThermometerConfigRequest {
    /**
     * 
     * @type {DomainThermometerConfig}
     * @memberof SimulatorhandlerUpdateThermometerConfigRequest
     */
    config?: DomainThermometerConfig;
}

/**
 * Check if a given object implements the SimulatorhandlerUpdateThermometerConfigRequest interface.
 */
export function instanceOfSimulatorhandlerUpdateThermometerConfigRequest(value: object): value is SimulatorhandlerUpdateThermometerConfigRequest {
    return true;
}

export function SimulatorhandlerUpdateThermometerConfigRequestFromJSON(json: any): SimulatorhandlerUpdateThermometerConfigRequest {
    return SimulatorhandlerUpdateThermometerConfigRequestFromJSONTyped(json, false);
}

export function SimulatorhandlerUpdateThermometerConfigRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatorhandlerUpdateThermometerConfigRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'config': json['config'] == null ? undefined : DomainThermometerConfigFromJSON(json['config']),
    };
}

  export function SimulatorhandlerUpdateThermometerConfigRequestToJSON(json: any): SimulatorhandlerUpdateThermometerConfigRequest {
      return SimulatorhandlerUpdateThermometerConfigRequestToJSONTyped(json, false);
  }

  export function SimulatorhandlerUpdateThermometerConfigRequestToJSONTyped(value?: SimulatorhandlerUpdateThermometerConfigRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'config': DomainThermometerConfigToJSON(value['config']),
    };
}

