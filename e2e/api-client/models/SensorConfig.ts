/* tslint:disable */
/* eslint-disable */
/**
 * IOT DASHBOARD SENSOR MONITORING API
 * API FOR IOT DASHBOARD SENSOR MONITORING
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SensorConfig
 */
export interface SensorConfig {
    /**
     * The ID of the sensor config
     * @type {string}
     * @memberof SensorConfig
     */
    readonly id?: string;
    /**
     * The key of the sensor config
     * @type {string}
     * @memberof SensorConfig
     */
    key?: string;
    /**
     * The value of the sensor config
     * @type {string}
     * @memberof SensorConfig
     */
    value?: string;
    /**
     * The creation date of the sensor config
     * @type {Date}
     * @memberof SensorConfig
     */
    readonly createdAt?: Date;
    /**
     * The update date of the sensor config
     * @type {Date}
     * @memberof SensorConfig
     */
    readonly updatedAt?: Date;
}

/**
 * Check if a given object implements the SensorConfig interface.
 */
export function instanceOfSensorConfig(value: object): value is SensorConfig {
    return true;
}

export function SensorConfigFromJSON(json: any): SensorConfig {
    return SensorConfigFromJSONTyped(json, false);
}

export function SensorConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'value': json['value'] == null ? undefined : json['value'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

  export function SensorConfigToJSON(json: any): SensorConfig {
      return SensorConfigToJSONTyped(json, false);
  }

  export function SensorConfigToJSONTyped(value?: Omit<SensorConfig, 'id'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key': value['key'],
        'value': value['value'],
    };
}

