{
  "swagger": "2.0",
  "info": {
    "description": "Describe your API",
    "version": "SNAPSHOT",
    "termsOfService": "http://swagger.io/terms/",
    "title": "Example API Doc",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api/v1",
  "schemes": ["http"],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "description": "Login to the system",
        "operationId": "postAuthLogin",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login request",
            "required": true,
            "schema": { "$ref": "#/definitions/authhandlerLoginRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "schema": { "$ref": "#/definitions/authhandlerLoginResponse" }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "description": "Register to the system",
        "operationId": "postAuthRegister",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register request",
            "required": true,
            "schema": { "$ref": "#/definitions/authhandlerRegisterRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered",
            "schema": { "$ref": "#/definitions/authhandlerRegisterResponse" }
          }
        }
      }
    },
    "/sensors": {
      "get": {
        "tags": ["Sensor"],
        "summary": "List sensors",
        "description": "List sensors",
        "operationId": "getSensors",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "ListSensorsResponse",
            "schema": {
              "$ref": "#/definitions/sensorhandlerListSensorsResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["Sensor"],
        "summary": "Create sensor",
        "description": "Create sensor",
        "operationId": "postSensors",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateSensorRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sensorhandlerCreateSensorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreateSensorResponse",
            "schema": {
              "$ref": "#/definitions/sensorhandlerCreateSensorResponse"
            }
          }
        }
      }
    },
    "/sensors/thermometer/logs": {
      "post": {
        "tags": ["Sensor"],
        "summary": "Create thermometer log",
        "description": "Create thermometer log",
        "operationId": "postSensorsThermometerLogs",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateSensorLogRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sensorhandlerCreateThermometerLogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreateSensorLogResponse",
            "schema": {
              "$ref": "#/definitions/sensorhandlerCreateThermometerLogResponse"
            }
          }
        }
      }
    },
    "/sensors/{id}/logs": {
      "get": {
        "tags": ["Sensor"],
        "summary": "List sensor logs",
        "description": "List sensor logs",
        "operationId": "getSensorsIdLogs",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sensor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ListSensorLogsResponse",
            "schema": {
              "$ref": "#/definitions/sensorhandlerListSensorLogsResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer": {
      "get": {
        "tags": ["Simulator.Thermometer"],
        "summary": "List thermometers",
        "description": "List thermometers",
        "operationId": "getSimulatorThermometer",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "ListThermometersResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerListThermometersResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Create thermometer",
        "description": "Create thermometer",
        "operationId": "postSimulatorThermometer",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateThermometerRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/simulatorhandlerCreateThermometerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreateThermometerResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerCreateThermometerResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer/{id}": {
      "get": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Get thermometer",
        "description": "Get thermometer",
        "operationId": "getSimulatorThermometerId",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Thermometer ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetThermometerResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerGetThermometerResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer/{id}/config": {
      "put": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Update thermometer config",
        "description": "Update thermometer config",
        "operationId": "putSimulatorThermometerIdConfig",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Thermometer ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "UpdateThermometerConfigRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/simulatorhandlerUpdateThermometerConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UpdateThermometerConfigResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerUpdateThermometerConfigResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer/{id}/history": {
      "get": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Get thermometer history",
        "description": "Get thermometer history",
        "operationId": "getSimulatorThermometerIdHistory",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Thermometer ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "GetTMHistoryResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerGetTMHistoryResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer/{id}/start": {
      "post": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Start thermometer engine",
        "description": "Start thermometer engine",
        "operationId": "postSimulatorThermometerIdStart",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Thermometer ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "EngineSwitchResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerEngineSwitchResponse"
            }
          }
        }
      }
    },
    "/simulator/thermometer/{id}/stop": {
      "post": {
        "tags": ["Simulator.Thermometer"],
        "summary": "Stop thermometer engine",
        "description": "Stop thermometer engine",
        "operationId": "postSimulatorThermometerIdStop",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Thermometer ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "EngineSwitchResponse",
            "schema": {
              "$ref": "#/definitions/simulatorhandlerEngineSwitchResponse"
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "description": "Get current user profile",
        "operationId": "getUsersMe",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { "$ref": "#/definitions/userhandlerGetMeResponse" }
          }
        }
      }
    },
    "/users/me/settings": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user settings",
        "description": "Get current user settings",
        "operationId": "getUsersMeSettings",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userhandlerGetMeSettingsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "authhandlerLoginErrorResponseData": {
      "type": "object",
      "properties": { "token": { "type": "string", "example": "token" } }
    },
    "authhandlerLoginRequest": {
      "type": "object",
      "properties": {
        "password": { "type": "string", "example": "password" },
        "username": { "type": "string", "example": "johndoe" }
      }
    },
    "authhandlerLoginResponse": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/authhandlerLoginErrorResponseData" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "authhandlerRegisterErrorResponseData": {
      "type": "object",
      "properties": {
        "user_id": { "example": "123e4567-e89b-12d3-a456-426614174000" }
      }
    },
    "authhandlerRegisterRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "example": "john.doe@example.com" },
        "full_name": { "type": "string", "example": "John Doe" },
        "password": { "type": "string", "example": "password" },
        "username": { "type": "string", "example": "johndoe" }
      }
    },
    "authhandlerRegisterResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/authhandlerRegisterErrorResponseData"
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "domainSensor": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainSensorConfig" }
        },
        "created_at": { "$ref": "#/definitions/timeTime" },
        "device_id": {},
        "id": {},
        "name": { "type": "string" },
        "owner_id": {},
        "type": { "type": "string" },
        "updated_at": { "$ref": "#/definitions/timeTime" }
      }
    },
    "domainSensorConfig": {
      "type": "object",
      "properties": {
        "created_at": { "$ref": "#/definitions/timeTime" },
        "id": {},
        "key": { "type": "string" },
        "sensor_id": {},
        "updated_at": { "$ref": "#/definitions/timeTime" },
        "value": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        }
      }
    },
    "domainSensorLog": {
      "type": "object",
      "properties": {
        "device_id": { "example": "123e4567-e89b-12d3-a456-426614174000" },
        "id": {},
        "key": { "type": "string", "example": "temperature" },
        "sensor_type": { "type": "string", "example": "thermometer" },
        "timestamp": {
          "$ref": "#/definitions/timeTime",
          "example": "2024-10-29T22:40:03.410461+07:00"
        },
        "value": { "type": "number", "format": "double", "example": "25.5" }
      }
    },
    "domainThermometer": {
      "type": "object",
      "properties": {
        "config": { "$ref": "#/definitions/domainThermometerConfig" },
        "connected": { "type": "boolean" },
        "created_at": { "$ref": "#/definitions/timeTime" },
        "id": {},
        "ip_address": { "type": "string" },
        "is_active": { "type": "boolean" },
        "owner_id": {},
        "temperature": { "type": "number", "format": "double" },
        "updated_at": { "$ref": "#/definitions/timeTime" }
      }
    },
    "domainThermometerConfig": {
      "type": "object",
      "properties": {
        "connection": {
          "type": "string",
          "example": "http://localhost:8080/api/v1/sensors/thermometer/logs"
        },
        "max_temperature": {
          "type": "number",
          "format": "double",
          "example": "100"
        },
        "min_temperature": {
          "type": "number",
          "format": "double",
          "example": "10"
        }
      }
    },
    "domainThermometerHistory": {
      "type": "object",
      "properties": {
        "id": { "example": "123e4567-e89b-12d3-a456-426614174000" },
        "temperature": {
          "type": "number",
          "format": "double",
          "example": "25.5"
        },
        "thermometer_id": { "example": "123e4567-e89b-12d3-a456-426614174000" },
        "timestamp": {
          "$ref": "#/definitions/timeTime",
          "example": "2024-10-29T22:40:03.410461+07:00"
        }
      }
    },
    "domainUser": {
      "type": "object",
      "properties": {
        "created_at": { "$ref": "#/definitions/timeTime" },
        "email": { "type": "string" },
        "full_name": { "type": "string" },
        "id": {},
        "password": { "type": "string" },
        "sensors": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainSensor" }
        },
        "settings": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainUserSetting" }
        },
        "thermometers": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainThermometer" }
        },
        "updated_at": { "$ref": "#/definitions/timeTime" },
        "username": { "type": "string" }
      }
    },
    "domainUserSetting": {
      "type": "object",
      "properties": {
        "created_at": { "$ref": "#/definitions/timeTime" },
        "id": {},
        "key": { "type": "string" },
        "owner_id": {},
        "updated_at": { "$ref": "#/definitions/timeTime" },
        "value": {
          "type": "array",
          "items": { "type": "integer", "format": "int32" }
        }
      }
    },
    "sensorhandlerCreateSensorRequest": {
      "type": "object",
      "properties": {
        "device_id": { "example": "123e4567-e89b-12d3-a456-426614174000" },
        "name": { "type": "string", "example": "bedroom" },
        "type": { "type": "string", "example": "thermometer" }
      }
    },
    "sensorhandlerCreateSensorResponse": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/domainSensor" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "sensorhandlerCreateThermometerLogRequest": {
      "type": "object",
      "properties": {
        "device_id": { "example": "123e4567-e89b-12d3-a456-426614174000" },
        "id": {},
        "key": { "type": "string", "example": "temperature" },
        "sensor_type": { "type": "string", "example": "thermometer" },
        "timestamp": {
          "type": "string",
          "example": "2024-10-29T22:40:03.410461+07:00"
        },
        "value": { "type": "number", "format": "double", "example": "25.5" }
      }
    },
    "sensorhandlerCreateThermometerLogResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Sensor log created" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "sensorhandlerListSensorLogsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainSensorLog" }
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "sensorhandlerListSensorsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainSensor" }
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerCreateThermometerRequest": {
      "type": "object",
      "properties": {
        "config": { "$ref": "#/definitions/domainThermometerConfig" }
      }
    },
    "simulatorhandlerCreateThermometerResponse": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/domainThermometer" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerEngineSwitchResponse": {
      "type": "object",
      "properties": {
        "message": { "type": "string", "example": "Engine started" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerGetTMHistoryResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainThermometerHistory" }
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerGetThermometerResponse": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/domainThermometer" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerListThermometersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainThermometer" }
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "simulatorhandlerUpdateThermometerConfigRequest": {
      "type": "object",
      "properties": {
        "config": { "$ref": "#/definitions/domainThermometerConfig" }
      }
    },
    "simulatorhandlerUpdateThermometerConfigResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Thermometer config updated"
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "timeTime": { "type": "object" },
    "userhandlerGetMeResponse": {
      "type": "object",
      "properties": {
        "data": { "$ref": "#/definitions/domainUser" },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    },
    "userhandlerGetMeSettingsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": { "$ref": "#/definitions/domainUserSetting" }
        },
        "status": { "type": "integer", "format": "int32", "example": "200" }
      }
    }
  },
  "host": "localhost:8080",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "JWT obtained by logging in",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [{ "BearerAuth": [] }]
}
