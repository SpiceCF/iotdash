openapi: "3.0.3"

info:
  title: IOT DASHBOARD SENSOR MONITORING API
  version: "1.0.0"
  description: API FOR IOT DASHBOARD SENSOR MONITORING

servers:
  - url: https://httpbin.org/anything
    description: testing server
  - url: http://localhost:8080/api/v1
    description: local server

security:
  - BearerAuth: []

paths:
  /healthcheck:
    get:
      operationId: healthcheck
      responses:
        200:
          description: Healthcheck
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
  /auth/login:
    post:
      operationId: login
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestBody"
      responses:
        "200":
          description: Login
          $ref: "#/components/responses/LoginResponse"
  /auth/register:
    post:
      operationId: register
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequestBody"
      responses:
        "200":
          description: Register
          $ref: "#/components/responses/RegisterResponse"
  /users/me:
    get:
      operationId: getMe
      responses:
        "200":
          description: Me
          $ref: "#/components/responses/GetMeResponse"

components:
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
      bearerFormat: JWT
      description: JWT obtained by logging in
  requestBodies:
    LoginRequestBody:
      description: Login request body
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                example: johndoe
              password:
                type: string
                example: password
    RegisterRequestBody:
      description: Register request body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
  responses:
    GetMeResponse:
      description: Me response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    LoginResponse:
      description: Login response
      content:
        application/json:
          schema:
            properties:
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzAyMTUzNDEsInN1YiI6ImViYjkxZWM4LTJmN2ItNDIwZC04ODExLWY4OGFiZDZkOTU5MyJ9.-Qz_xvGxwdCMaFWuQ7x1qFbdsGnNiDBATU6c6g0Diiw"
    RegisterResponse:
      description: Register response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
  schemas:
    ThermometerConfig:
      properties:
        connection:
          type: string
          description: The connection type of the thermometer
          example: http://localhost:8080/api/v1/sensors/thermometer/logs
        min_temperature:
          type: number
          description: The minimum temperature of the thermometer
          example: 37
        max_temperature:
          type: number
          description: The maximum temperature of the thermometer
          example: 37
    Thermometer:
      properties:
        id:
          type: string
          description: The ID of the thermometer
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        owner_id:
          type: string
          description: The owner ID of the thermometer
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        ip_address:
          type: string
          description: The IP address of the thermometer
          example: 192.168.1.100
          readOnly: true
        connected:
          type: boolean
          description: The connection status of the thermometer
          example: true
          readOnly: true
        temperature:
          type: number
          description: The temperature of the thermometer
          example: 37
        is_active:
          type: boolean
          description: The active status of the thermometer
          example: true
        config:
          $ref: "#/components/schemas/ThermometerConfig"
        created_at:
          type: string
          format: date-time
          description: The creation date of the thermometer
          example: 2021-01-01T00:00:00Z
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The update date of the thermometer
          example: 2021-01-01T00:00:00Z
          readOnly: true

    SensorLog:
      properties:
        id:
          type: string
          description: The ID of the sensor log
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        device_id:
          type: string
          description: The device ID of the sensor log
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        sensor_type:
          type: string
          description: The type of the sensor log
          enum:
            - temperature
          example: temperature
          readOnly: true
        value:
          type: object
          description: The value of the sensor log
          example: { "temperature": 37 }
          readOnly: true
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the sensor log
          example: 2021-01-01T00:00:00Z
          readOnly: true

    SensorConfig:
      properties:
        id:
          type: string
          description: The ID of the sensor config
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        key:
          type: string
          description: The key of the sensor config
          example: threshold
        value:
          type: string
          description: The value of the sensor config
          example: 37
        created_at:
          type: string
          format: date-time
          description: The creation date of the sensor config
          example: 2021-01-01T00:00:00Z
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The update date of the sensor config
          example: 2021-01-01T00:00:00Z
          readOnly: true

    Sensor:
      properties:
        id:
          type: string
          description: The ID of the sensor
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        device_id:
          type: string
          description: The device ID of the sensor
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        name:
          type: string
          description: The name of the sensor
          example: Sensor 1
        type:
          type: string
          enum:
            - thermometer
          description: The type of the sensor
          example: thermometer
        configs:
          type: array
          description: The configs of the sensor
          items:
            $ref: "#/components/schemas/SensorConfig"
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: The creation date of the sensor
          example: 2021-01-01T00:00:00Z
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The update date of the sensor
          example: 2021-01-01T00:00:00Z
          readOnly: true

    UserSetting:
      properties:
        id:
          type: string
          description: The ID of the user setting
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        key:
          type: string
          description: The key of the user setting
          example: theme
        value:
          type: string
          description: The value of the user setting
          example: dark
        created_at:
          type: string
          format: date-time
          description: The creation date of the user setting
          example: 2021-01-01T00:00:00Z
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The update date of the user setting
          example: 2021-01-01T00:00:00Z
          readOnly: true

    User:
      properties:
        id:
          type: string
          description: The ID of the user
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        full_name:
          type: string
          description: The full name of the user
          example: John Doe
        email:
          type: string
          description: The email of the user
          example: johndoe@example.com
        username:
          type: string
          description: The username of the user
          example: johndoe
        password:
          type: string
          description: The password of the user
          example: password
          writeOnly: true
        settings:
          type: array
          description: The settings of the user
          items:
            $ref: "#/components/schemas/UserSetting"
          readOnly: true
        sensors:
          type: array
          description: The sensors of the user
          items:
            $ref: "#/components/schemas/Sensor"
          readOnly: true
        thermometers:
          type: array
          description: The thermometers of the user
          items:
            $ref: "#/components/schemas/Thermometer"
          readOnly: true
        created_at:
          type: string
          format: date-time
          description: The creation date of the user
          example: 2021-01-01T00:00:00Z
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The update date of the user
          example: 2021-01-01T00:00:00Z
          readOnly: true
